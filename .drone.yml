---
kind: pipeline
type: exec
name: macOS Debug

platform:
  os: darwin
  arch: amd64

steps:
- name: submodules
  commands:
# Get also miniupnp (submodule)
  - git submodule update --init --recursive

- name: build
  commands:
# Get all homebrew installed commands (cmake)
  - export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
  - cd source
# Configure & build
  - cmake -B build . -DCMAKE_BUILD_TYPE=Debug
  - cmake --build build --config Debug -j 10

---
kind: pipeline
type: exec
name: macOS Release

platform:
  os: darwin
  arch: amd64

steps:
- name: submodules
  commands:
# Get also miniupnp (submodule)
  - git submodule update --init --recursive

- name: build
  commands:
# Get all homebrew installed commands (cmake)
  - export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
  - cd source
# Configure & build
  - cmake -B build . -DCMAKE_BUILD_TYPE=Release
  - cmake --build build --config Release -j 10

- name: sign
  environment:
    MyPassword:
      from_secret: MyPassword
    CerticateCommonName:
      from_secret: CerticateCommonName
  commands:
  - cd source/scripts
  - ./sign-all_mac-externals.zsh

- name: dmg - notarize & staple
  environment:
    MyAppleTeam:
      from_secret: MyAppleTeam
    MyAppleID:
      from_secret: MyAppleID
    AppSpecificPassword:
      from_secret: AppSpecificPassword
  commands:
  - cd source/scripts
  - ./dmg-notarize+staple_mac-externals.zsh

- name: copy dmg
  commands:
  - commit=`git log -1 --pretty=format:%h`
  - rm -f /Users/$(whoami)/Documents/Max\ 8/bnl.externals/mac_externals.drone_release-*.dmg
  - cp mac_externals.notarized.dmg /Users/$(whoami)/Documents/Max\ 8/bnl.externals/mac_externals.drone_release-$commit.dmg


---
kind: pipeline
type: exec
name: Windows Debug

platform:
  os: windows
  arch: amd64

steps:
- name: submodules
  commands:
# Get also miniupnp (submodule)
  - git submodule update --init --recursive

- name: build
  commands:
  - cd source
# Configure & build
  - cmake -B build .
  - cmake --build build --config Debug -j 10